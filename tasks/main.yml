---

- name: Include OS specific variables
  include_vars: "{{ ansible_os_family }}.yml"

- name: Install nfs-utils when ansible_os_family is RedHat
  yum: name="{{ item }}" state=installed
  with_items: "{{ nfs_packages }}"
  when: ansible_os_family == "RedHat"

- name: Include overrides specific to RHEL 7.
  include_vars: RedHat-7.yml
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version == "7"

- name: Install nfs-kernel-server when ansible_os_family is Debian
  apt: name="{{ item }}" state=installed
  with_items: "{{ nfs_packages }}"
  when: ansible_os_family == "Debian"

- name: Setup Ports
  lineinfile: dest="{{ nfs_config_file }}"
              regexp="^#?{{ item.name }}"
              line='{{ item.name }}={{ item.value }}'
  with_items: "{{ nfs_ports }}"
  notify: restart nfs services
  register: ports

- name: Setup RPCNFSDARGS
  lineinfile: dest="{{ nfs_config_file }}"
              regexp="^#?RPCNFSDARGS"
              line='RPCNFSDARGS="{{ rpc_nfsd_args }}"'
  notify: restart nfs services
  when:
    - backnet_addr is defined

- name: Setup RPCNFSDCOUNT
  lineinfile: dest="{{ nfs_config_file }}"
              regexp="^#?RPCNFSDCOUNT"
              line='RPCNFSDCOUNT="{{ rpc_nfsd_count }}"'
  notify: restart nfs services
  when:
    - backnet_addr is defined

- name: Setup STATDARG
  lineinfile: dest="{{ nfs_config_file }}"
              regexp="^#?STATDARG"
              line='STATDARG="{{ rpc_statd_args }}"'
  notify: restart nfs services
  when:
    - backnet_addr is defined

- name: Setup RPCBIND_ARGS
  lineinfile: dest="{{ rpcbind_config_file }}"
              regexp="^#?RPCBIND_ARGS"
              line='RPCBIND_ARGS="{{ rpc_bind_args }}"'
  notify: restart nfs services
  when:
    - backnet_addr is defined

- name: Flush Handlers to Apply Config Changes
  meta: flush_handlers

- name: Ensure exported directory exists
  file: path="{{ item.path }}" state=directory
        owner='{{ item.owner|default(nfs_default_owner) }}'
        group='{{ item.group|default(nfs_default_group) }}'
        mode='{{ item.mode|default("0755") }}'
  with_items: "{{ nfs_exported_directories }}"

- name: Ensure exported directories are in /etc/exports
  template: dest=/etc/exports
            src=exports.j2
  register: exports

- name: Disable NFS service if no exports are available
  service: name="{{ item }}"
           state=stopped
           enabled=no
  with_items: "{{ nfs_services }}"
  when: exports.changed and not nfs_exported_directories

- name: Ensure NFS service started and enabled
  service: name="{{ item }}"
           state=restarted
           enabled=yes
  with_items: "{{ nfs_services }}"
  when: (exports.changed or ports.changed) and nfs_exported_directories
